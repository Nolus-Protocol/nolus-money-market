lints = { workspace = true }

[package]
name = "oracle"
version = "0.5.22"
edition.workspace = true
authors.workspace = true
license.workspace = true

[package.metadata.cargo-each]
combinations = [
    { tags = ["build", "$net", "$protocol"], always-on = ["contract", "$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol" } },
    { tags = ["build", "$net", "$protocol"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$net" = ["net_dev", "net_test"], "$protocol" = ["osmosis-osmosis-osmo"] } },
    { tags = ["build", "$net", "$protocol"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$net" = ["net_main"], "$protocol" = ["neutron-astroport-usdc_noble", "osmosis-osmosis-akt", "osmosis-osmosis-all_btc", "osmosis-osmosis-all_sol", "osmosis-osmosis-statom", "osmosis-osmosis-usdc_noble"] } },
    { tags = ["ci", "$net", "$protocol"], feature-groups = ["net", "protocol", "$[contract-and-testing]-or-stubs"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol", "$[contract-and-testing]-or-stubs" = ["contract-and-testing", "stubs"] } },
    { tags = ["ci", "$net", "$protocol"], feature-groups = ["$[contract-and-testing]-or-stubs"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$[contract-and-testing]-or-stubs" = ["contract-and-testing", "stubs"], "$net" = ["net_dev", "net_test"], "$protocol" = ["osmosis-osmosis-osmo"] } },
    { tags = ["ci", "$net", "$protocol"], feature-groups = ["$[contract-and-testing]-or-stubs"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$[contract-and-testing]-or-stubs" = ["contract-and-testing", "stubs"], "$net" = ["net_main"], "$protocol" = ["neutron-astroport-usdc_noble", "osmosis-osmosis-akt", "osmosis-osmosis-all_btc", "osmosis-osmosis-all_sol", "osmosis-osmosis-statom", "osmosis-osmosis-usdc_noble"] } },
]
feature-groups = { net = { members = ["net_dev", "net_test", "net_main"], at-least-one = true, mutually-exclusive = true }, protocol = { members = ["neutron-astroport-usdc_axelar", "osmosis-osmosis-usdc_axelar"], at-least-one = true, mutually-exclusive = true }, contract-and-testing = { members = ["contract", "testing"], at-least-one = true, mutually-exclusive = false }, stubs = { members = ["stub_alarms", "stub_price", "stub_swap"], at-least-one = false, mutually-exclusive = false } }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
contract = [
    "stub_alarms",
    "stub_price",
    "stub_swap",
    "sdk/contract",
    "dep:cosmwasm-std",
    "dep:marketprice",
    "dep:versioning",
]
stub_alarms = ["dep:currencies"]
stub_price = ["dep:oracle-platform"]
stub_swap = ["dep:oracle-platform"]
testing = [
    "stub_alarms",
    "stub_price",
    "stub_swap",
    "currencies/testing",
    "marketprice/testing",
]

[dependencies]
currencies = { workspace = true, optional = true }
currency = { workspace = true }
finance = { workspace = true }
marketprice = { workspace = true, optional = true }
oracle-platform = { workspace = true, optional = true }
platform = { workspace = true }
sdk = { workspace = true }
tree = { workspace = true, features = ["schema"] }
versioning = { workspace = true, optional = true, features = ["schema"] }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true, optional = true }

thiserror = { workspace = true }
serde = { workspace = true, features = ["derive"] }

[dev-dependencies]
currencies = { workspace = true, features = ["testing"] }
currency = { workspace = true, features = ["testing"] }
finance = { workspace = true }
platform = { workspace = true, features = ["testing"] }
schema = { workspace = true }
oracle = { workspace = true, features = ["contract"] }
marketprice = { workspace = true, features = ["testing"] }
tree = { workspace = true, features = ["schema", "testing"] }
