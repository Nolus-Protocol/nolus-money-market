use finance::{
    currency::{AnyVisitor, Currency as _, Group, Member, Symbol},
    error::Error,
};

use #currencies_module#::{$
    #currency#,$
};

pub struct #name#Group;

impl Group for #name#Group {
    type ResolveError = Error;

    fn resolve<V>(symbol: Symbol, visitor: V) -> Result<V::Output, V::Error>
    where
        V: AnyVisitor<Self>,
        Self::ResolveError: Into<V::Error>,
    {
        match symbol {$
            #currency#::SYMBOL => visitor.on::<#currency#>(),$
            _ => Err(Error::NotInCurrencyGroup(symbol.into()).into()),
        }
    }
}$

impl Member<#name#Group> for #currency# {}$
